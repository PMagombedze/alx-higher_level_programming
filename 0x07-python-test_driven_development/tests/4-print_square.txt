The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Import the function from the module:
	>>> print_square = __import__("4-print_square").print_square

Checking for module docstring:
	 >>> d = __import__("4-print_square").__doc__
	 >>> len(d) > 1
	 True

Checking for function docstring:
	 >>> e = __import__("4-print_square").print_square.__doc__
         >>> len(e) > 1
         True

Checking for no args:
	 >>> print_square()
	 Traceback (most recent call last):
	 ...
	 TypeError: print_square() missing 1 required positional argument: 'size'

Checking for too many args
	 >>> print_square(1, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_square() takes 1 positional argument but 2 were given

Checking for passing None:
	 >>> print_square(None)
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer

Checking for +ve ints:
	 >>> print_square(10)
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 ##########
	 >>> print_square(0)

Checking for -ve int:
	 >>> print_square(-3)
	 Traceback (most recent call last):
         ...
         ValueError: size must be >= 0

Checking for string:
	 >>> print_square("5")
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer
	 >>> print_square(False)
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer

Checking for non-int:
	 >>> print_square(-8.8)
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer
	 >>> print_square(8.8)
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer
